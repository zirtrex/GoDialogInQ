version: '2'
services:
  mysql:
    build: ./data
    image: godialoginq/mysql_db:lastest
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci
    container_name: godialoginq_mysql_db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=godialoginq
      - MYSQL_USER=godialoginq
      - MYSQL_PASSWORD=godialoginq
    ports:
      - '3305:3306'
    volumes:
      - 'mysql_data:/var/lib/mysql'
    networks:
      - app-network
  back:
    build: ./back
    image: godialoginq/back:lastest
    container_name: godialoginq_back
    restart: unless-stopped
    env_file: ./back/.env
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=godialoginq
      - MYSQL_ROOT_PASSWORD=godialoginq
      - MYSQL_DATABASE=godialoginq
      - MYSQL_PORT=3306
      - NODE_PORT=8081
    ports:
      - '8081:8081'
    networks:
      - app-network
    links:
      - mysql
    #command: ./wait-for-it.sh mysql:3306 -- node app.js
  front:
    build: ./front
    image: godialoginq/front:lastest
    container_name: godialoginq_front
    restart: always    
    ports:
      - '8082:8082'
    networks:
      - app-network
  fullfilment:
    build: ./fullfilment
    image: godialoginq/fullfilment:lastest
    container_name: godialoginq_fullfilment
    restart: always
    environment:
      - BACK_PROTOCOL=http
      - BACK_HOST=back
      - BACK_PORT=8081
    ports:
      - '8083:8083'
    networks:
      - app-network
    links:
      - back
  mantenimiento:
    build: ./mantenimiento
    image: godialoginq/mantenimiento:lastest
    container_name: godialoginq_mantenimiento
    restart: always
    environment:
      - BACK_PROTOCOL=http
      - BACK_HOST=back
      - BACK_PORT=8081
    ports:
      - '8084:8084'
    networks:
      - app-network
    links:
      - back
networks:
  app-network:
    driver: bridge
volumes:
  mysql_data: