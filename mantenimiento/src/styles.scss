/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

.header-fixed .app-header {
  z-index: 50;
}

.aside-menu {
  z-index: 49;
}

::ng-deep .cdk-overlay-container {
  z-index: 10000 !important;
}

table {
  width: 100%;
}

.mat-form-field {
  font-size: 14px;
  width: 100%;
}

.hide{
  display: none;
}

span.green {
  background-color: darkseagreen;
  padding: 5px;
  border-radius: 5px;
  color: #fff;
}

span.red {
  background-color: crimson;
  padding: 5px;
  border-radius: 5px;
  color: #fff;
}

mat-cell, mat-header-cell, mat-footer-cell {
  padding: 10px;
}

@media screen and (max-width: 960px) {
  .mat-table {
    border: 0;
    vertical-align: middle
  }

  .mat-table caption {
    font-size: 1em;
  }
  
  /*  Enable this to hide header
  .mat-table .mat-header-cell {
    
    border: 10px solid;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    width: 1px;
  }
  */
  .mat-table .mat-row {
    border-bottom: 5px solid #ddd;
    display: block;
    height:auto !important;
  }
  .mat-row {
    padding: 0 24px;
  }

  .mat-row::after {
    content: none;
  }
  /*
  .mat-table .mat-row:nth-child(even) {background: #CCC}
  .mat-table .mat-row:nth-child(odd) {background: #FFF}
  */
  .mat-table .mat-cell {
    border-bottom: 1px solid #ddd;
    display: block;
    font-size: 1em;
    text-align: right;
    font-weight: bold;
    height:auto;
    margin-bottom: 4%;
  }
  .mat-table .mat-cell:before {
    /*
    * aria-label has no advantage, it won't be read inside a table
    content: attr(aria-label);
    */
    content: attr(data-label);
    float: left;
    text-transform: uppercase;
    font-weight: normal;
    
    font-size: .85em;
  }
  .mat-table .mat-cell:last-child {
    border-bottom: 0;
  }
  .mat-table .mat-cell:first-child {
    margin-top: 4%;
    padding-left: 0;
  }
}

@mixin mat-table-columns($columns)
{
    .mat-column-
    {
        @each $colName, $props in $columns {

            $width: map-get($props, 'width');

            &#{$colName} 
            {
                flex: $width;
                max-width: $width;

                @if map-has-key($props, 'color') 
                {
                    color: map-get($props, 'color');
                }
            }  
        }
    }
    @media screen and (max-width: 960px) {
      .mat-column-
      {
        @each $colName, $props in $columns {

          $width: map-get($props, 'width');

          &#{$colName} 
          {
              flex: 100%;
              max-width: 100%;

              @if map-has-key($props, 'color') 
              {
                  color: map-get($props, 'color');
              }
          }  
        } 
      } 
    }
}
